/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 50725
Source Host           : localhost:3306
Source Database       : mayday

Target Server Type    : MYSQL
Target Server Version : 50725
File Encoding         : 65001

Date: 2019-04-15 02:06:58
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for mayday_article
-- ----------------------------
DROP TABLE IF EXISTS `mayday_article`;
CREATE TABLE `mayday_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) DEFAULT NULL COMMENT '发表用户',
  `article_content` longtext COMMENT '文章内容html格式',
  `article_content_md` longtext COMMENT '文章内容Markdown格式',
  `article_newstime` datetime DEFAULT NULL COMMENT '发布时间',
  `article_status` int(11) DEFAULT NULL COMMENT '文章状态 0已发布1草稿2回收站',
  `article_summary` varchar(255) DEFAULT NULL COMMENT '文章摘要',
  `article_thumbnail` varchar(255) DEFAULT NULL COMMENT '略缩图',
  `article_title` varchar(255) DEFAULT NULL COMMENT '文章标题',
  `article_type` int(255) DEFAULT NULL COMMENT '文章类型0原创1转载',
  `article_post` varchar(255) DEFAULT NULL COMMENT 'post文章 page页面',
  `article_comment` int(11) DEFAULT NULL COMMENT '是否开启评论 0开启1不开启',
  `article_updatetime` datetime DEFAULT NULL COMMENT '文章最后修改时间',
  `article_url` varchar(255) DEFAULT NULL COMMENT '文章路径',
  `article_views` bigint(20) DEFAULT '0' COMMENT '访问量统计',
  PRIMARY KEY (`id`),
  UNIQUE KEY `MAYDAY_ARTICLE_URL` (`article_url`) USING BTREE,
  KEY `MAYDAY_ARTICLE_USERID` (`user_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_article
-- ----------------------------
INSERT INTO `mayday_article` VALUES ('2', '1', '<h3 id=\"-\">腾讯云内和升级</h3>\r\n<pre><code class=\"lang-shell\">#查看内核版本\r\n<span class=\"hljs-selector-tag\">uname</span> <span class=\"hljs-selector-tag\">-r</span>\r\n2<span class=\"hljs-selector-class\">.6</span><span class=\"hljs-selector-class\">.32-754</span><span class=\"hljs-selector-class\">.6</span><span class=\"hljs-selector-class\">.3</span><span class=\"hljs-selector-class\">.el6</span><span class=\"hljs-selector-class\">.x86_64</span> <span class=\"hljs-selector-id\">#2</span>版本\r\n</code></pre>\r\n<p><strong>内核升级</strong></p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#导入 public key</span>\r\nrpm --import https:<span class=\"hljs-comment\">//www.elrepo.org/RPM-GPG-KEY-elrepo.org</span>\r\n<span class=\"hljs-meta\">#为 RHEL-7，SL-7 或 CentOS-7 安装 ELRepo：</span>\r\nrpm -Uvh http:<span class=\"hljs-comment\">//www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span>\r\n<span class=\"hljs-meta\">#为 RHEL-6，SL-6 或 CentOS-6 安装 ELRepo：</span>\r\nrpm -Uvh http:<span class=\"hljs-comment\">//www.elrepo.org/elrepo-release-6-8.el6.elrepo.noarch.rpm</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>这里需要注意的是~，在 ELRepo 中有两个内核选项，一个是 kernel-lt(长期支持版本)，一个是 kernel-ml(主线最新版本)，采用长期支持版本 (kernel-lt)，更稳定一些</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> kernel<span class=\"hljs-_\">-lt</span>(稳定版)</span>\r\nyum --enablerepo=elrepo-kernel install kernel-lt -y \r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\"> kernel-ml(最新版)</span>\r\nyum --enablerepo=elrepo-kernel install kernel-ml -y\r\n</code></pre>\r\n<p><strong>安装完成，需要修改 grub</strong></p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">vim</span> /etc/grub.conf\r\n</code></pre>\r\n<blockquote>\r\n<p>根据安装好以后的内核位置，修改 default 的值，一般是修改为 0，因为 default 从 0 开始，一般新安装的内核在第一个位置，所以设置 default=0</p>\r\n</blockquote>\r\n<p><strong>重启</strong></p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">重启</span>\r\nreboot\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">查看内核</span>\r\nuname -r\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">4.18.13-1.el6.elrepo.x86_64</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">升级成功</span>\r\n</code></pre>\r\n<h3 id=\"-docker\">安装docker</h3>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">安装</span>\r\nyum -y install docker-io\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">启动docker</span>\r\nservice docker start\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">关闭docker</span>\r\nservice docker stop\r\n</code></pre>\r\n<p><strong>docker操作</strong></p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">搜索镜像</span>\r\ndocker search tomcat\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">拉取镜像</span>\r\ndocker pull tomcat\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">根据镜像启动容器</span>\r\ndocker run ‐‐name mytomcat ‐d tomcat:latest\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">查看运行中的容器</span>\r\ndocker ps \r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">停止运行中的容器</span>\r\ndocker stop  容器的id\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">查看所有的容器</span>\r\ndocker ps ‐a\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">启动容器</span>\r\ndocker start 容器id\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">删除一个容器</span>\r\n docker rm 容器id\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">启动一个做了端口映射的tomcat</span>\r\ndocker run ‐d ‐p 8888:8080 tomcat\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> ‐d：后台运行</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> ‐p: 将主机的端口映射到容器的一个端口    主机端口:容器内部的端口</span>\r\n</code></pre>\r\n<p><strong>修改docker镜像地址</strong></p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">镜像加速直接运行命令</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">该脚本可以将 –registry-mirror 加入到你的 Docker 配置文件 /etc/default/docker 中。适用于 <span class=\"hljs-comment\">#Ubuntu14.04、Debian、CentOS6 、CentOS7、Fedora、Arch Linux、openSUSE Leap 42.1，其他版本可#能有细微不同。 http://3272dd08.m.daocloud.io 为国内加速链接</span></span>\r\ncurl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://3272dd08.m.daocloud.io\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\"><span class=\"hljs-comment\">#############</span></span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">这个 json 文件不存在的，不需要担心，直接编辑</span>\r\nvim /etc/docker/daemon.json\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">下面是内容</span>\r\n</code></pre>\r\n<pre><code class=\"lang-json\">{ \r\n    <span class=\"hljs-attr\">\"registry-mirrors\"</span>:[<span class=\"hljs-string\">\"https://registry.docker-cn.com\"</span>] \r\n}\r\n</code></pre>\r\n<p><strong>下载oracle</strong></p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">首先下载镜像，镜像可以在阿里云上找</span>\r\ndocker pull registry.cn-hangzhou.aliyuncs.com/qida/oracle-xe-11g\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">下载下来后，开始 run</span>\r\ndocker run -d -p 1521:1521 --name oracle 容器id\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">查看运行容器</span>\r\ndocker ps -a\r\n</code></pre>\r\n<p><strong>运行oracle容器</strong></p>\r\n<pre><code class=\"lang-shell\">docker run -d -p 49160:22 -p 49161:1521 -e ORACLE_ALLOW_REMOTE=true \r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\">运行，并开放 49160 和 49161 端口，分别对应 22 端口和 oracle 端口（SSH 和 oracle 数据库）</span>\r\n<span class=\"hljs-meta\">\r\n#</span><span class=\"bash\">hostname: localhost</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">port: 49161</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">sid: xe</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">username: system</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">password: oracle</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">SYSTEM 和 SYS 的初始密码都为 oracle</span>\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">Container SSH 的 root 密码为admin。</span>\r\n</code></pre>\r\n<p><strong>命令</strong></p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">ss</span> -tunl\r\n\r\nlsof -i:<span class=\"hljs-number\">80</span>\r\n\r\nnetstat -ltunp\r\n\r\n<span class=\"hljs-comment\">#看看是哪个进程监听了</span>\r\nnetstat -tulpn | grep :<span class=\"hljs-number\">80</span>\r\n</code></pre>', '### 腾讯云内和升级\r\n\r\n~~~shell\r\n#查看内核版本\r\nuname -r\r\n2.6.32-754.6.3.el6.x86_64 #2版本\r\n~~~\r\n\r\n**内核升级**\r\n\r\n~~~~shell\r\n#导入 public key\r\nrpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\r\n#为 RHEL-7，SL-7 或 CentOS-7 安装 ELRepo：\r\nrpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm\r\n#为 RHEL-6，SL-6 或 CentOS-6 安装 ELRepo：\r\nrpm -Uvh http://www.elrepo.org/elrepo-release-6-8.el6.elrepo.noarch.rpm\r\n~~~~\r\n\r\n> 这里需要注意的是~，在 ELRepo 中有两个内核选项，一个是 kernel-lt(长期支持版本)，一个是 kernel-ml(主线最新版本)，采用长期支持版本 (kernel-lt)，更稳定一些\r\n\r\n~~~shell\r\n# kernel-lt(稳定版)\r\nyum --enablerepo=elrepo-kernel install kernel-lt -y \r\n\r\n# kernel-ml(最新版)\r\nyum --enablerepo=elrepo-kernel install kernel-ml -y \r\n~~~\r\n\r\n**安装完成，需要修改 grub**\r\n\r\n~~~shell\r\nvim /etc/grub.conf\r\n~~~\r\n\r\n> 根据安装好以后的内核位置，修改 default 的值，一般是修改为 0，因为 default 从 0 开始，一般新安装的内核在第一个位置，所以设置 default=0\r\n\r\n**重启**\r\n\r\n~~~shell\r\n#重启\r\nreboot\r\n#查看内核\r\nuname -r\r\n#4.18.13-1.el6.elrepo.x86_64\r\n#升级成功\r\n~~~\r\n\r\n### 安装docker\r\n\r\n~~~shell\r\n#安装\r\nyum -y install docker-io\r\n#启动docker\r\nservice docker start\r\n#关闭docker\r\nservice docker stop\r\n~~~\r\n\r\n**docker操作**\r\n\r\n~~~shell\r\n#搜索镜像\r\ndocker search tomcat\r\n#拉取镜像\r\ndocker pull tomcat\r\n#根据镜像启动容器\r\ndocker run ‐‐name mytomcat ‐d tomcat:latest\r\n#查看运行中的容器\r\ndocker ps \r\n#停止运行中的容器\r\ndocker stop  容器的id\r\n#查看所有的容器\r\ndocker ps ‐a\r\n#启动容器\r\ndocker start 容器id\r\n#删除一个容器\r\n docker rm 容器id\r\n#启动一个做了端口映射的tomcat\r\ndocker run ‐d ‐p 8888:8080 tomcat\r\n# ‐d：后台运行\r\n# ‐p: 将主机的端口映射到容器的一个端口    主机端口:容器内部的端口\r\n~~~\r\n\r\n**修改docker镜像地址**\r\n\r\n~~~shell\r\n#镜像加速直接运行命令\r\n#该脚本可以将 –registry-mirror 加入到你的 Docker 配置文件 /etc/default/docker 中。适用于 #Ubuntu14.04、Debian、CentOS6 、CentOS7、Fedora、Arch Linux、openSUSE Leap 42.1，其他版本可#能有细微不同。 http://3272dd08.m.daocloud.io 为国内加速链接\r\ncurl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://3272dd08.m.daocloud.io\r\n##############\r\n#这个 json 文件不存在的，不需要担心，直接编辑\r\nvim /etc/docker/daemon.json\r\n#下面是内容\r\n~~~\r\n\r\n~~~json\r\n{ \r\n	\"registry-mirrors\":[\"https://registry.docker-cn.com\"] \r\n}\r\n~~~\r\n\r\n**下载oracle**\r\n\r\n~~~shell\r\n#首先下载镜像，镜像可以在阿里云上找\r\ndocker pull registry.cn-hangzhou.aliyuncs.com/qida/oracle-xe-11g\r\n#下载下来后，开始 run\r\ndocker run -d -p 1521:1521 --name oracle 容器id\r\n#查看运行容器\r\ndocker ps -a\r\n~~~\r\n\r\n**运行oracle容器**\r\n\r\n~~~shell\r\ndocker run -d -p 49160:22 -p 49161:1521 -e ORACLE_ALLOW_REMOTE=true \r\n\r\n#运行，并开放 49160 和 49161 端口，分别对应 22 端口和 oracle 端口（SSH 和 oracle 数据库）\r\n\r\n#hostname: localhost\r\n#port: 49161\r\n#sid: xe\r\n#username: system\r\n#password: oracle\r\n#SYSTEM 和 SYS 的初始密码都为 oracle\r\n#Container SSH 的 root 密码为admin。\r\n\r\n~~~\r\n\r\n**命令**\r\n\r\n~~~shell\r\nss -tunl\r\n\r\nlsof -i:80\r\n\r\nnetstat -ltunp\r\n\r\n#看看是哪个进程监听了\r\nnetstat -tulpn | grep :80\r\n~~~', '2019-04-13 11:21:51', '0', '腾讯云内和升级安装docker', '/static/img/rand/1.jpg', '腾讯云内和升级安装docker', '0', 'post', '0', '2019-04-13 12:26:36', '1555125711', null);
INSERT INTO `mayday_article` VALUES ('3', '1', '<h1 id=\"idea-\">IDEA 类和方法注释模板设置</h1>\r\n<h2 id=\"1-\">1.类注释</h2>\r\n<blockquote>\r\n<p>首先我们来设置 IDEA 中类的模板：（IDEA 中在创建类时会自动给添加注释)</p>\r\n</blockquote>\r\n<p>打开：file-&gt;setting-&gt;Editor-&gt;Filr and Code Templates-&gt;Includes-&gt;File Header</p>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/26/PbZwB4.png\" alt=\"\"></p>\r\n<pre><code class=\"lang-java\"> /**\r\n  * @Auther: ${USER}\r\n  * @version <span class=\"hljs-number\">1.0</span>\r\n  * @Date: ${DATE} ${HOUR}:${MINUTE}\r\n  * @Description: \r\n  *<span class=\"hljs-regexp\">/</span>\r\n</code></pre>\r\n<p>保存即可</p>\r\n<h2 id=\"2-\">2.方法注释</h2>\r\n<blockquote>\r\n<p>1.打开 file-&gt;setting-&gt;Editor-&gt;LiveTemplates 点击右边上面那个绿色的 + 号，选择 Template Group 双击，然后弹出一个窗口，随便添加一个名字，我这里添加的是 MyGroup 然后点击 OK </p>\r\n<p>2.再次点击上面那个绿色的+号，选择Live Templates设置注释名字为 *</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/26/PbZ5Ed.png\" alt=\"\"></p>\r\n<pre><code class=\"lang-java\">*\r\n * <span class=\"hljs-symbol\">Description:</span> \r\n * @auther: $user$\r\n * @param: $param$\r\n * @return: $return$\r\n * @date: $date$ $time$\r\n *<span class=\"hljs-regexp\">/</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>下一步</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/26/PbeivT.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>下一步 选择java</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/26/PbeP2V.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>下一步--&gt;点击右下角的 Edit variables 按钮，然后弹出一个窗口</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/26/PbeC80.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>下一步 选择相应的方法</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/26/Pbe9Cq.png\" alt=\"\"></p>\r\n<p>保存即可</p>\r\n<h2 id=\"3-\">3.测试</h2>\r\n<blockquote>\r\n<p>新建一个类进行测试 结果如下</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/26/PbeZVJ.png\" alt=\"\"></p>\r\n<p>完成。</p>', '# IDEA 类和方法注释模板设置\r\n\r\n## 1.类注释\r\n\r\n> 首先我们来设置 IDEA 中类的模板：（IDEA 中在创建类时会自动给添加注释)\r\n\r\n打开：file->setting->Editor->Filr and Code Templates->Includes->File Header\r\n\r\n![](https://s1.ax1x.com/2018/08/26/PbZwB4.png)\r\n\r\n~~~ java\r\n /**\r\n  * @Auther: ${USER}\r\n  * @version 1.0\r\n  * @Date: ${DATE} ${HOUR}:${MINUTE}\r\n  * @Description: \r\n  */\r\n~~~\r\n\r\n保存即可\r\n\r\n## 2.方法注释\r\n\r\n> 1.打开 file->setting->Editor->LiveTemplates 点击右边上面那个绿色的 + 号，选择 Template Group 双击，然后弹出一个窗口，随便添加一个名字，我这里添加的是 MyGroup 然后点击 OK \r\n>\r\n> 2.再次点击上面那个绿色的+号，选择Live Templates设置注释名字为 *\r\n\r\n![](https://s1.ax1x.com/2018/08/26/PbZ5Ed.png)\r\n\r\n\r\n\r\n~~~java\r\n*\r\n * Description: \r\n * @auther: $user$\r\n * @param: $param$\r\n * @return: $return$\r\n * @date: $date$ $time$\r\n */\r\n~~~\r\n\r\n> 下一步\r\n\r\n![](https://s1.ax1x.com/2018/08/26/PbeivT.png)\r\n\r\n> 下一步 选择java\r\n\r\n![](https://s1.ax1x.com/2018/08/26/PbeP2V.png)\r\n\r\n> 下一步-->点击右下角的 Edit variables 按钮，然后弹出一个窗口\r\n\r\n![](https://s1.ax1x.com/2018/08/26/PbeC80.png)\r\n\r\n> 下一步 选择相应的方法\r\n\r\n![](https://s1.ax1x.com/2018/08/26/Pbe9Cq.png)\r\n\r\n保存即可\r\n\r\n## 3.测试\r\n\r\n> 新建一个类进行测试 结果如下\r\n\r\n![](https://s1.ax1x.com/2018/08/26/PbeZVJ.png)\r\n\r\n完成。', '2019-04-13 11:53:28', '0', 'IDEA类和方法注释模板设置', '/static/img/rand/2.jpg', 'IDEA类和方法注释模板设置', '0', 'post', '0', '2019-04-13 12:25:21', '1555127608', null);
INSERT INTO `mayday_article` VALUES ('4', '1', '<h1 id=\"-\">服务器环境搭建</h1>\r\n<h2 id=\"1-\">1.安装前准备</h2>\r\n<p>需要安装的软件</p>\r\n<blockquote>\r\n<ol>\r\n<li>jdk1.7 </li>\r\n<li>tomcat</li>\r\n<li>mysql</li>\r\n<li>nginx</li>\r\n</ol>\r\n</blockquote>\r\n<p>开放常用端口号 执行命令 按 <strong>i</strong> 编辑</p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">vim</span> /etc/sysconfig/iptables\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/27/PqD6yV.png\" alt=\"\"></p>\r\n<p>添加如下</p>\r\n<pre><code class=\"lang-shell\">-A INPUT -<span class=\"hljs-keyword\">m</span> <span class=\"hljs-keyword\">state</span> --<span class=\"hljs-keyword\">state</span> NEW -<span class=\"hljs-keyword\">m</span> tcp -p tcp --dport <span class=\"hljs-number\">8080</span> -j ACCEPT\r\n-A INPUT -<span class=\"hljs-keyword\">m</span> <span class=\"hljs-keyword\">state</span> --<span class=\"hljs-keyword\">state</span> NEW -<span class=\"hljs-keyword\">m</span> tcp -p tcp --dport <span class=\"hljs-number\">3306</span> -j ACCEPT\r\n-A INPUT -<span class=\"hljs-keyword\">m</span> <span class=\"hljs-keyword\">state</span> --<span class=\"hljs-keyword\">state</span> NEW -<span class=\"hljs-keyword\">m</span> tcp -p tcp --dport <span class=\"hljs-number\">80</span> -j ACCEPT\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/27/PqD2eU.png\" alt=\"\"></p>\r\n<p>按<strong>ESC</strong>退出编辑模式 在按<strong>shift+ZZ</strong>保存</p>\r\n<p>重启防火墙</p>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">service</span> iptables restart\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PL6YRJ.png\" alt=\"\"></p>\r\n<p>上传需要的软件</p>\r\n<p><a href=\"http://file.suhuanzhen.cn/\">软件下载地址</a></p>\r\n<blockquote>\r\n<p>使用wget命令在服务器下载</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">wget http:<span class=\"hljs-comment\">//file.suhuanzhen.cn/apache-tomcat-7.0.90.tar.gz</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>1.创建一个目录存放软件</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">mkdir</span> -p /www/dev\r\n</code></pre>\r\n<blockquote>\r\n<p>2.进入该目录</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-built_in\">cd</span> /www/dev\r\n</code></pre>\r\n<blockquote>\r\n<p>3.使用rz上传文件 提示命令不存在安装</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">yum</span> -y install lrzsz\r\n</code></pre>\r\n<blockquote>\r\n<p>4.输入rz选择要上传的文件</p>\r\n</blockquote>\r\n<h2 id=\"2-\">2.查看系统是否安装过这些软件</h2>\r\n<h3 id=\"2-1-jdk\">2.1.检查是否安装过jdk</h3>\r\n<blockquote>\r\n<p>1.命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">rpm</span> -qa | grep java\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PL7vvV.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>2.卸载软件</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-selector-tag\">rpm</span> <span class=\"hljs-selector-tag\">-e</span> <span class=\"hljs-selector-tag\">--nodeps</span> <span class=\"hljs-selector-tag\">java-1</span><span class=\"hljs-selector-class\">.7</span><span class=\"hljs-selector-class\">.0-openjdk-1</span><span class=\"hljs-selector-class\">.7</span><span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.45-2</span><span class=\"hljs-selector-class\">.4</span><span class=\"hljs-selector-class\">.3</span><span class=\"hljs-selector-class\">.3</span><span class=\"hljs-selector-class\">.el6</span><span class=\"hljs-selector-class\">.x86_64</span>\r\n<span class=\"hljs-selector-tag\">rpm</span> <span class=\"hljs-selector-tag\">-e</span> <span class=\"hljs-selector-tag\">--nodeps</span> <span class=\"hljs-selector-tag\">java-1</span><span class=\"hljs-selector-class\">.6</span><span class=\"hljs-selector-class\">.0-openjdk-1</span><span class=\"hljs-selector-class\">.6</span><span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.0-1</span><span class=\"hljs-selector-class\">.66</span><span class=\"hljs-selector-class\">.1</span><span class=\"hljs-selector-class\">.13</span><span class=\"hljs-selector-class\">.0</span><span class=\"hljs-selector-class\">.el6</span><span class=\"hljs-selector-class\">.x86_64</span>\r\n</code></pre>\r\n<h4 id=\"2-1-1-\">2.1.1.查询是否还有残余文件</h4>\r\n<blockquote>\r\n<p>命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">find</span> / -name java\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLHeKK.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>删除</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">rm</span> –rf <span class=\"hljs-comment\">#文件名</span>\r\n<span class=\"hljs-comment\">#终极命令</span>\r\nfind / -name java | xargs rm -rf\r\n</code></pre>\r\n<h3 id=\"2-2-mysql-\">2.2.检查mysql安装包</h3>\r\n<blockquote>\r\n<p>命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">rpm</span> -qa | grep mysql\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLH1PA.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>卸载</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">rpm</span> –e --nodeps <span class=\"hljs-comment\">#文件名</span>\r\n</code></pre>\r\n<h4 id=\"2-2-1-\">2.2.1查看残余文件</h4>\r\n<blockquote>\r\n<p>命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">find</span> / -name mysql\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLHsx0.png\" alt=\"\"></p>\r\n<h4 id=\"2-2-2-\">2.2.2删除残余文件</h4>\r\n<blockquote>\r\n<p>命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">find</span> / -name mysql | xargs rm -rf\r\n</code></pre>\r\n<h3 id=\"2-3-nginx-\">2.3.nginx检查</h3>\r\n<blockquote>\r\n<p>命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">rpm</span> -qa | grep nginx\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLqlct.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>卸载</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">rpm <span class=\"hljs-_\">-e</span> --nodeps <span class=\"hljs-comment\">#文件名</span>\r\n</code></pre>\r\n<h4 id=\"2-3-1-\">2.3.1查看是否有残余文件</h4>\r\n<blockquote>\r\n<p>命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">find</span> / -name nginx\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLqHED.png\" alt=\"\"></p>\r\n<h4 id=\"2-3-2-\">2.3.2删除残余文件</h4>\r\n<blockquote>\r\n<p>命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">find</span> / -name nginx | xargs rm -rf\r\n</code></pre>\r\n<h2 id=\"3-jdk\">3.安装jdk</h2>\r\n<blockquote>\r\n<p>进入软件存放目录</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-built_in\">cd</span> /www/dev/\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLLIRs.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>解压jdk</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">tar -zxvf jdk1<span class=\"hljs-number\">.7</span><span class=\"hljs-number\">.0</span>_80.tar -C <span class=\"hljs-regexp\">/usr/</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>配置环境变量</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">vim</span> /etc/profile\r\n</code></pre>\r\n<blockquote>\r\n<p>在文件顶端输入如下内容</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-built_in\">export</span> JAVA_HO\r\nME= /usr/jdk1.7.0_80  <span class=\"hljs-comment\">#jdk安装目录  </span>\r\n<span class=\"hljs-built_in\">export</span> JRE_HOME=<span class=\"hljs-variable\">${JAVA_HOME}</span>/jre\r\n<span class=\"hljs-built_in\">export</span> CLASSPATH=.:<span class=\"hljs-variable\">${JAVA_HOME}</span>/lib:<span class=\"hljs-variable\">${JRE_HOME}</span>/lib\r\n<span class=\"hljs-built_in\">export</span>  PATH=<span class=\"hljs-variable\">${JAVA_HOME}</span>/bin:<span class=\"hljs-variable\">$PATH</span>\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLONSs.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>保存文件</p>\r\n<p>执行 profile 文件</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-built_in\">source</span> /etc/profile\r\n</code></pre>\r\n<blockquote>\r\n<p>查看是否安装成功</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">java</span> -version\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLOyY4.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>安装成功</p>\r\n</blockquote>\r\n<h2 id=\"4-tomcat\">4.安装tomcat</h2>\r\n<h3 id=\"4-1-\">4.1安装</h3>\r\n<blockquote>\r\n<p>进入软件存放目录</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-built_in\">cd</span> /www/dev\r\n</code></pre>\r\n<blockquote>\r\n<p>解压</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">tar -zxvf apache-tomcat-7.0.90.tar.gz -C /usr/<span class=\"hljs-built_in\">local</span>/\r\n</code></pre>\r\n<blockquote>\r\n<p>进入解压后的目录</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">tar -zxvf apache-tomcat-7.0.90.tar.gz -C /usr/<span class=\"hljs-built_in\">local</span>/\r\n</code></pre>\r\n<blockquote>\r\n<p>启动tomcat</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">./startup.sh\r\n</code></pre>\r\n<blockquote>\r\n<p>访问 </p>\r\n</blockquote>\r\n<p><a href=\"http://172.23.140.32:8080/\">http://172.23.140.32:8080/</a></p>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLvVFU.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>成功</p>\r\n<p>关闭命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">./shutdown.sh\r\n</code></pre>\r\n<h3 id=\"4-2-\">4.2开机启动</h3>\r\n<blockquote>\r\n<p>进入下面目录</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-built_in\">cd</span> /etc/init.d/\r\n</code></pre>\r\n<blockquote>\r\n<p>创建文件</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">touch</span> tomcat\r\n</code></pre>\r\n<blockquote>\r\n<p>编辑</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">vim</span> tomcat\r\n</code></pre>\r\n<blockquote>\r\n<p>添加已下内容</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#!/bin/bash  </span>\r\n<span class=\"hljs-comment\">#  </span>\r\n<span class=\"hljs-comment\"># tomcat startup script for the Tomcat server  </span>\r\n<span class=\"hljs-comment\">#  </span>\r\n<span class=\"hljs-comment\"># chkconfig: 345 80 20  </span>\r\n<span class=\"hljs-comment\"># description: start the tomcat deamon  </span>\r\n<span class=\"hljs-comment\">#  </span>\r\n<span class=\"hljs-comment\"># Source function library  </span>\r\n. /etc/rc.d/init.d/<span class=\"hljs-built_in\">functions</span>  \r\n\r\nprog=tomcat\r\nJAVA_HOME=/usr/jdk1.7.0_80  <span class=\"hljs-comment\">#jdk路径</span>\r\n<span class=\"hljs-built_in\">export</span> JAVA_HOME  \r\nCATALANA_HOME=/usr/<span class=\"hljs-built_in\">local</span>/apache-tomcat-7.0.90  <span class=\"hljs-comment\">#tomcat路径</span>\r\n<span class=\"hljs-built_in\">export</span> CATALINA_HOME  \r\n\r\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>\"</span> <span class=\"hljs-keyword\">in</span>  \r\nstart)  \r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Starting Tomcat...\"</span>  \r\n    <span class=\"hljs-variable\">$CATALANA_HOME</span>/bin/startup.sh  \r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Starting Tomcat ok\"</span>\r\n    ;;  \r\n\r\nstop)  \r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Stopping Tomcat...\"</span>  \r\n    <span class=\"hljs-variable\">$CATALANA_HOME</span>/bin/shutdown.sh  \r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Stopping Tomcat ok\"</span>\r\n    ;;  \r\n\r\nrestart)  \r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Stopping Tomcat...\"</span>  \r\n    <span class=\"hljs-variable\">$CATALANA_HOME</span>/bin/shutdown.sh  \r\n    sleep 2  \r\n    <span class=\"hljs-built_in\">echo</span>  \r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Starting Tomcat...\"</span>  \r\n<span class=\"hljs-variable\">$CATALANA_HOME</span>/bin/startup.sh  \r\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Starting Tomcat ok\"</span>\r\n    ;;  \r\n\r\n*)  \r\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Usage: <span class=\"hljs-variable\">$prog</span> {start|stop|restart}\"</span>  \r\n    ;;  \r\n<span class=\"hljs-keyword\">esac</span>  \r\n<span class=\"hljs-built_in\">exit</span> 0\r\n</code></pre>\r\n<blockquote>\r\n<p>保存文件</p>\r\n<p>给文件添加可执行权限</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">chmod</span> <span class=\"hljs-number\">755</span> tomcat\r\n</code></pre>\r\n<blockquote>\r\n<p>把tomcat添加到系统服务</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">chkconfig --<span class=\"hljs-keyword\">add</span> tomcat\r\n</code></pre>\r\n<blockquote>\r\n<p>开启服务</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">chkconfig</span> tomcat <span class=\"hljs-literal\">on</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>重启系统查看配置是否成功</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">reboot\r\n</code></pre>\r\n<blockquote>\r\n<p>执行命令看端口号</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">netstat</span> -na | grep <span class=\"hljs-number\">8080</span>\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLxX8g.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>或者执行此命令</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">ps</span> -ef | grep java\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLxvvj.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>开机启动成功</p>\r\n</blockquote>\r\n<h3 id=\"4-3-\">4.3操作命令</h3>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">启动命令</span>\r\nservice tomcat start\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">重启命令</span>\r\nservice tomcat restart\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">停止命令</span>\r\nservice tomcat stop\r\n</code></pre>\r\n<blockquote>\r\n<p>tomcat安装完成</p>\r\n</blockquote>\r\n<h2 id=\"5-mysql-\">5.mysql安装</h2>\r\n<blockquote>\r\n<p>安装mysql客户端</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">yum -y <span class=\"hljs-keyword\">install</span> mysql-<span class=\"hljs-keyword\">server</span>\r\nyum -y <span class=\"hljs-keyword\">install</span> mysql-devel\r\n</code></pre>\r\n<blockquote>\r\n<p>启动mysql服务</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">service</span> mysqld start\r\n</code></pre>\r\n<blockquote>\r\n<p>设置开机启动</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">chkconfig --<span class=\"hljs-keyword\">add</span> mysqld\r\nchkconfig mysqld <span class=\"hljs-keyword\">on</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>登录mysql</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">mysql</span> -u root –p\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLzrRg.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>第一次登录不需要密码回车就行</p>\r\n<p>设置密码</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">mysql</span>;\r\n<span class=\"hljs-comment\">#设置密码</span>\r\nSET PASSWORD <span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-string\">\'root\'</span>@<span class=\"hljs-string\">\'localhost\'</span> = PASSWORD(<span class=\"hljs-string\">\'123456\'</span>);\r\nflush privileges;\r\n<span class=\"hljs-comment\">#退出重新登录</span>\r\n<span class=\"hljs-keyword\">exit</span>\r\n</code></pre>\r\n<h3 id=\"5-1-\">5.1开启远程访问</h3>\r\n<blockquote>\r\n<p>登录mysql</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">mysql</span> -u root -p\r\n</code></pre>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-keyword\">use</span> <span class=\"hljs-title\">mysql</span>;\r\n<span class=\"hljs-comment\">#进行授权操作</span>\r\ngrant all privileges on *.*  to <span class=\"hljs-string\">\'root\'</span>@<span class=\"hljs-string\">\'%\'</span> identified by <span class=\"hljs-string\">\'123456\'</span> with grant option;\r\n<span class=\"hljs-comment\">#重载授权表</span>\r\nflush privileges;\r\n<span class=\"hljs-comment\">#退出mysql</span>\r\n<span class=\"hljs-keyword\">exit</span>\r\n</code></pre>\r\n<h3 id=\"5-2-\">5.2测试远程访问</h3>\r\n<blockquote>\r\n<p>如图</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLzHy9.png\" alt=\"\"></p>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PLzvFK.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>报错 解决办法</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-comment\">#打开文件</span>\r\n<span class=\"hljs-attribute\">vim</span> /etc/my.cnf\r\n</code></pre>\r\n<p>看看是否有绑定本地回环地址的配置，如果有，注释掉下面这段文字：（在文字之前加上 #号即可） </p>\r\n<p>bind-address = 127.0.0.1</p>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/POSVFf.png\" alt=\"\"></p>\r\n<p>然后找到 [mysqld] 部分的参数，在配置后面建立一个新行，添加下面这个参数：<br>skip-name-resolve</p>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/POSYfU.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>保存文件并重启 mysql</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-attribute\">service</span> mysqld restart\r\n</code></pre>\r\n<blockquote>\r\n<p>再次测试</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/POS6fO.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>连接成功</p>\r\n</blockquote>\r\n<hr>\r\n<h2 id=\"6-nginx\">6.安装nginx</h2>\r\n<h3 id=\"6-1-\">6.1.安装</h3>\r\n<blockquote>\r\n<p>在安装 nginx 前首先要确认系统中安装了 gcc、pcre-devel、zlib-devel、openssl-deve</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-comment\">#一键安装</span>\r\n<span class=\"hljs-attribute\">yum</span> -y install gcc pcre-devel zlib-devel openssl openssl-devel\r\n</code></pre>\r\n<blockquote>\r\n<p>进入软件目录</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-built_in\">cd</span> /www/dev\r\n</code></pre>\r\n<blockquote>\r\n<p>解压nginx到当前目录</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-selector-tag\">tar</span> <span class=\"hljs-selector-tag\">-zxvf</span> <span class=\"hljs-selector-tag\">nginx-1</span><span class=\"hljs-selector-class\">.13</span><span class=\"hljs-selector-class\">.10</span><span class=\"hljs-selector-class\">.tar</span><span class=\"hljs-selector-class\">.gz</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>进入解压目录</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-built_in\">cd</span> /www/dev/nginx-1.13.10\r\n</code></pre>\r\n<blockquote>\r\n<p>编译</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\">./configure --prefix=/usr/<span class=\"hljs-built_in\">local</span>/nginx\r\n</code></pre>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">执行make命令</span>\r\nmake\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">执行make install命令</span>\r\nmake install\r\n</code></pre>\r\n<h3 id=\"6-2-\">6.2测试是否安装成功</h3>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-comment\">#进入nginx目录</span>\r\n<span class=\"hljs-built_in\">cd</span> /usr/<span class=\"hljs-built_in\">local</span>/nginx/sbin/\r\n<span class=\"hljs-comment\">#启动nginx</span>\r\n./nginx\r\n</code></pre>\r\n<blockquote>\r\n<p>输入服务器ip访问，看见下面页面证明安装成功</p>\r\n</blockquote>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PO9kPf.png\" alt=\"\"></p>\r\n<h3 id=\"6-3-\">6.3配置开机启动</h3>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\">进入目录</span>\r\ncd /etc/init.d\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">新建文件</span>\r\ntouch nginx\r\n<span class=\"hljs-meta\">#</span><span class=\"bash\">编辑文件</span>\r\nvim nginx\r\n</code></pre>\r\n<blockquote>\r\n<p>添加如下内容</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#!/bin/sh</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># nginx - this script starts and stops the nginx daemon</span>\r\n<span class=\"hljs-comment\">#</span>\r\n<span class=\"hljs-comment\"># chkconfig:   - 85 15</span>\r\n<span class=\"hljs-comment\"># description:  NGINX is an HTTP(S) server, HTTP(S) reverse \\</span>\r\n<span class=\"hljs-comment\">#               proxy and IMAP/POP3 proxy server</span>\r\n<span class=\"hljs-comment\"># processname: nginx</span>\r\n<span class=\"hljs-comment\"># config:      /etc/nginx/nginx.conf</span>\r\n<span class=\"hljs-comment\"># config:      /etc/sysconfig/nginx</span>\r\n<span class=\"hljs-comment\"># pidfile:     /var/run/nginx.pid</span>\r\n<span class=\"hljs-comment\"># Source function library.</span>\r\n. /etc/rc.d/init.d/<span class=\"hljs-built_in\">functions</span>\r\n<span class=\"hljs-comment\"># Source networking configuration.</span>\r\n. /etc/sysconfig/network\r\n<span class=\"hljs-comment\"># Check that networking is up.</span>\r\n[ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$NETWORKING</span>\"</span> = <span class=\"hljs-string\">\"no\"</span> ] &amp;&amp; <span class=\"hljs-built_in\">exit</span> 0\r\nnginx=<span class=\"hljs-string\">\"/usr/local/nginx/sbin/nginx\"</span>  <span class=\"hljs-comment\">#nginx执行路径</span>\r\nprog=$(basename <span class=\"hljs-variable\">$nginx</span>)\r\nNGINX_CONF_FILE=<span class=\"hljs-string\">\"/usr/local/nginx/conf/nginx.conf\"</span>  <span class=\"hljs-comment\">#nginx配置文件路径</span>\r\n[ <span class=\"hljs-_\">-f</span> /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx\r\nlockfile=/var/lock/subsys/nginx\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">make_dirs</span></span>() {\r\n   <span class=\"hljs-comment\"># make required directories</span>\r\n   user=`<span class=\"hljs-variable\">$nginx</span> -V 2&gt;&amp;1 | grep <span class=\"hljs-string\">\"configure arguments:\"</span> | sed <span class=\"hljs-string\">\'s/[^*]*--user=\\([^ ]*\\).*/\\1/g\'</span> -`\r\n   <span class=\"hljs-keyword\">if</span> [ -z <span class=\"hljs-string\">\"`grep <span class=\"hljs-variable\">$user</span> /etc/passwd`\"</span> ]; <span class=\"hljs-keyword\">then</span>\r\n       useradd -M <span class=\"hljs-_\">-s</span> /bin/nologin <span class=\"hljs-variable\">$user</span>\r\n   <span class=\"hljs-keyword\">fi</span>\r\n   options=`<span class=\"hljs-variable\">$nginx</span> -V 2&gt;&amp;1 | grep <span class=\"hljs-string\">\'configure arguments:\'</span>`\r\n   <span class=\"hljs-keyword\">for</span> opt <span class=\"hljs-keyword\">in</span> <span class=\"hljs-variable\">$options</span>; <span class=\"hljs-keyword\">do</span>\r\n       <span class=\"hljs-keyword\">if</span> [ `<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$opt</span> | grep <span class=\"hljs-string\">\'.*-temp-path\'</span>` ]; <span class=\"hljs-keyword\">then</span>\r\n           value=`<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$opt</span> | cut <span class=\"hljs-_\">-d</span> <span class=\"hljs-string\">\"=\"</span> <span class=\"hljs-_\">-f</span> 2`\r\n           <span class=\"hljs-keyword\">if</span> [ ! <span class=\"hljs-_\">-d</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$value</span>\"</span> ]; <span class=\"hljs-keyword\">then</span>\r\n               <span class=\"hljs-comment\"># echo \"creating\" $value</span>\r\n               mkdir -p <span class=\"hljs-variable\">$value</span> &amp;&amp; chown -R <span class=\"hljs-variable\">$user</span> <span class=\"hljs-variable\">$value</span>\r\n           <span class=\"hljs-keyword\">fi</span>\r\n       <span class=\"hljs-keyword\">fi</span>\r\n   <span class=\"hljs-keyword\">done</span>\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">start</span></span>() {\r\n    [ -x <span class=\"hljs-variable\">$nginx</span> ] || <span class=\"hljs-built_in\">exit</span> 5\r\n    [ <span class=\"hljs-_\">-f</span> <span class=\"hljs-variable\">$NGINX_CONF_FILE</span> ] || <span class=\"hljs-built_in\">exit</span> 6\r\n    make_dirs\r\n    <span class=\"hljs-built_in\">echo</span> -n $<span class=\"hljs-string\">\"Starting <span class=\"hljs-variable\">$prog</span>: \"</span>\r\n    daemon <span class=\"hljs-variable\">$nginx</span> -c <span class=\"hljs-variable\">$NGINX_CONF_FILE</span>\r\n    retval=$?\r\n    <span class=\"hljs-built_in\">echo</span>\r\n    [ <span class=\"hljs-variable\">$retval</span> <span class=\"hljs-_\">-eq</span> 0 ] &amp;&amp; touch <span class=\"hljs-variable\">$lockfile</span>\r\n    <span class=\"hljs-built_in\">return</span> <span class=\"hljs-variable\">$retval</span>\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">stop</span></span>() {\r\n    <span class=\"hljs-built_in\">echo</span> -n $<span class=\"hljs-string\">\"Stopping <span class=\"hljs-variable\">$prog</span>: \"</span>\r\n    killproc <span class=\"hljs-variable\">$prog</span> -QUIT\r\n    retval=$?\r\n    <span class=\"hljs-built_in\">echo</span>\r\n    [ <span class=\"hljs-variable\">$retval</span> <span class=\"hljs-_\">-eq</span> 0 ] &amp;&amp; rm <span class=\"hljs-_\">-f</span> <span class=\"hljs-variable\">$lockfile</span>\r\n    <span class=\"hljs-built_in\">return</span> <span class=\"hljs-variable\">$retval</span>\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">restart</span></span>() {\r\n    configtest || <span class=\"hljs-built_in\">return</span> $?\r\n    stop\r\n    sleep 1\r\n    start\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">reload</span></span>() {\r\n    configtest || <span class=\"hljs-built_in\">return</span> $?\r\n    <span class=\"hljs-built_in\">echo</span> -n $<span class=\"hljs-string\">\"Reloading <span class=\"hljs-variable\">$prog</span>: \"</span>\r\n    killproc <span class=\"hljs-variable\">$nginx</span> -HUP\r\n    RETVAL=$?\r\n    <span class=\"hljs-built_in\">echo</span>\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">force_reload</span></span>() {\r\n    restart\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">configtest</span></span>() {\r\n  <span class=\"hljs-variable\">$nginx</span> -t -c <span class=\"hljs-variable\">$NGINX_CONF_FILE</span>\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">rh_status</span></span>() {\r\n    status <span class=\"hljs-variable\">$prog</span>\r\n}\r\n<span class=\"hljs-function\"><span class=\"hljs-title\">rh_status_q</span></span>() {\r\n    rh_status &gt;/dev/null 2&gt;&amp;1\r\n}\r\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>\"</span> <span class=\"hljs-keyword\">in</span>\r\n    start)\r\n        rh_status_q &amp;&amp; <span class=\"hljs-built_in\">exit</span> 0\r\n        <span class=\"hljs-variable\">$1</span>\r\n        ;;\r\n    stop)\r\n        rh_status_q || <span class=\"hljs-built_in\">exit</span> 0\r\n        <span class=\"hljs-variable\">$1</span>\r\n        ;;\r\n    restart|configtest)\r\n        <span class=\"hljs-variable\">$1</span>\r\n        ;;\r\n    reload)\r\n        rh_status_q || <span class=\"hljs-built_in\">exit</span> 7\r\n        <span class=\"hljs-variable\">$1</span>\r\n        ;;\r\n    force-reload)\r\n        force_reload\r\n        ;;\r\n    status)\r\n        rh_status\r\n        ;;\r\n    condrestart|try-restart)\r\n        rh_status_q || <span class=\"hljs-built_in\">exit</span> 0\r\n            ;;\r\n    *)\r\n        <span class=\"hljs-built_in\">echo</span> $<span class=\"hljs-string\">\"Usage: <span class=\"hljs-variable\">$0</span> {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\"</span>\r\n        <span class=\"hljs-built_in\">exit</span> 2\r\n<span class=\"hljs-keyword\">esac</span>\r\n</code></pre>\r\n<blockquote>\r\n<p>保存文件</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#为nginx添加执行权限</span>\r\nchmod <span class=\"hljs-number\">755</span> nginx\r\n<span class=\"hljs-meta\">#添加到系统服务</span>\r\nchkconfig --<span class=\"hljs-keyword\">add</span> nginx\r\nchkconfig nginx <span class=\"hljs-keyword\">on</span>\r\n</code></pre>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-comment\">#测试脚本是否可用,启动nginx</span>\r\n<span class=\"hljs-attribute\">service</span> nginx start\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PO9dd1.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>启动成功</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-comment\">#停止nginx</span>\r\n<span class=\"hljs-attribute\">service</span> nginx stop\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PO9DJK.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>停止成功</p>\r\n</blockquote>\r\n<pre><code class=\"lang-shell\"><span class=\"hljs-comment\">#重启nginx</span>\r\n<span class=\"hljs-attribute\">service</span> nginx restart\r\n</code></pre>\r\n<p><img src=\"https://s1.ax1x.com/2018/08/28/PO9gLd.png\" alt=\"\"></p>\r\n<blockquote>\r\n<p>重启成功</p>\r\n<p>完成安装</p>\r\n</blockquote>', '# 			服务器环境搭建\r\n\r\n## 1.安装前准备\r\n\r\n需要安装的软件\r\n\r\n> 1. jdk1.7 \r\n> 2. tomcat\r\n> 3. mysql\r\n> 4. nginx\r\n\r\n开放常用端口号 执行命令 按 **i** 编辑\r\n\r\n~~~shell\r\nvim /etc/sysconfig/iptables\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/27/PqD6yV.png)\r\n\r\n添加如下\r\n\r\n~~~ shell\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/27/PqD2eU.png)\r\n\r\n   \r\n\r\n按**ESC**退出编辑模式 在按**shift+ZZ**保存\r\n\r\n重启防火墙\r\n\r\n~~~shell\r\nservice iptables restart\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PL6YRJ.png)\r\n\r\n上传需要的软件\r\n\r\n[软件下载地址](http://file.suhuanzhen.cn/)\r\n\r\n> 使用wget命令在服务器下载\r\n\r\n~~~shell\r\nwget http://file.suhuanzhen.cn/apache-tomcat-7.0.90.tar.gz\r\n~~~\r\n\r\n> 1.创建一个目录存放软件\r\n\r\n~~~shell\r\nmkdir -p /www/dev\r\n~~~\r\n\r\n> 2.进入该目录\r\n\r\n~~~shell\r\ncd /www/dev\r\n~~~\r\n\r\n> 3.使用rz上传文件 提示命令不存在安装\r\n\r\n~~~shell\r\nyum -y install lrzsz\r\n~~~\r\n\r\n> 4.输入rz选择要上传的文件\r\n\r\n\r\n\r\n## 2.查看系统是否安装过这些软件\r\n\r\n### 2.1.检查是否安装过jdk\r\n\r\n> 1.命令\r\n\r\n~~~shell\r\nrpm -qa | grep java\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PL7vvV.png)\r\n\r\n> 2.卸载软件\r\n\r\n~~~shell\r\nrpm -e --nodeps java-1.7.0-openjdk-1.7.0.45-2.4.3.3.el6.x86_64\r\nrpm -e --nodeps java-1.6.0-openjdk-1.6.0.0-1.66.1.13.0.el6.x86_64\r\n~~~\r\n\r\n#### 2.1.1.查询是否还有残余文件\r\n\r\n> 命令\r\n\r\n~~~shell\r\nfind / -name java\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLHeKK.png)\r\n\r\n> 删除\r\n\r\n~~~shell\r\nrm –rf #文件名\r\n#终极命令\r\nfind / -name java | xargs rm -rf \r\n~~~\r\n\r\n### 2.2.检查mysql安装包\r\n\r\n> 命令\r\n\r\n~~~shell\r\nrpm -qa | grep mysql\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLH1PA.png)\r\n\r\n> 卸载\r\n\r\n~~~shell\r\nrpm –e --nodeps #文件名\r\n~~~\r\n\r\n#### 2.2.1查看残余文件\r\n\r\n> 命令\r\n\r\n~~~shell\r\nfind / -name mysql\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLHsx0.png)\r\n\r\n#### 2.2.2删除残余文件\r\n\r\n> 命令\r\n\r\n~~~shell\r\nfind / -name mysql | xargs rm -rf\r\n~~~\r\n\r\n### 2.3.nginx检查\r\n\r\n> 命令\r\n\r\n~~~shell\r\nrpm -qa | grep nginx\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLqlct.png)\r\n\r\n> 卸载\r\n\r\n~~~shell\r\nrpm -e --nodeps #文件名\r\n~~~\r\n\r\n#### 2.3.1查看是否有残余文件\r\n\r\n> 命令\r\n\r\n~~~shell\r\nfind / -name nginx\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLqHED.png)\r\n\r\n#### 2.3.2删除残余文件\r\n\r\n> 命令\r\n\r\n~~~shell\r\nfind / -name nginx | xargs rm -rf\r\n~~~\r\n\r\n## 3.安装jdk\r\n\r\n> 进入软件存放目录\r\n\r\n~~~shell\r\ncd /www/dev/\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLLIRs.png)\r\n\r\n> 解压jdk\r\n\r\n~~~shell\r\ntar -zxvf jdk1.7.0_80.tar -C /usr/\r\n~~~\r\n\r\n> 配置环境变量\r\n\r\n~~~shell\r\nvim /etc/profile\r\n~~~\r\n\r\n> 在文件顶端输入如下内容\r\n\r\n~~~shell\r\nexport JAVA_HO\r\nME= /usr/jdk1.7.0_80  #jdk安装目录  \r\nexport JRE_HOME=${JAVA_HOME}/jre\r\nexport CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib\r\nexport  PATH=${JAVA_HOME}/bin:$PATH\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLONSs.png)\r\n\r\n> 保存文件\r\n>\r\n> 执行 profile 文件\r\n\r\n~~~shell\r\nsource /etc/profile\r\n~~~\r\n\r\n> 查看是否安装成功\r\n\r\n~~~shell\r\njava -version\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLOyY4.png)\r\n\r\n> 安装成功\r\n\r\n## 4.安装tomcat\r\n\r\n### 4.1安装\r\n\r\n> 进入软件存放目录\r\n\r\n~~~shell\r\ncd /www/dev\r\n~~~\r\n\r\n> 解压\r\n\r\n~~~shell\r\ntar -zxvf apache-tomcat-7.0.90.tar.gz -C /usr/local/\r\n~~~\r\n\r\n> 进入解压后的目录\r\n\r\n~~~shell\r\ntar -zxvf apache-tomcat-7.0.90.tar.gz -C /usr/local/\r\n~~~\r\n\r\n> 启动tomcat\r\n\r\n~~~shell\r\n./startup.sh\r\n~~~\r\n\r\n> 访问 \r\n\r\nhttp://172.23.140.32:8080/\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLvVFU.png)\r\n\r\n> 成功\r\n\r\n> 关闭命令\r\n\r\n~~~shell\r\n./shutdown.sh\r\n~~~\r\n\r\n### 4.2开机启动\r\n\r\n> 进入下面目录\r\n\r\n~~~shell\r\ncd /etc/init.d/\r\n~~~\r\n\r\n> 创建文件\r\n\r\n~~~shell\r\ntouch tomcat\r\n~~~\r\n\r\n> 编辑\r\n\r\n~~~shell\r\nvim tomcat\r\n~~~\r\n\r\n>添加已下内容\r\n\r\n~~~shell\r\n#!/bin/bash  \r\n#  \r\n# tomcat startup script for the Tomcat server  \r\n#  \r\n# chkconfig: 345 80 20  \r\n# description: start the tomcat deamon  \r\n#  \r\n# Source function library  \r\n. /etc/rc.d/init.d/functions  \r\n   \r\nprog=tomcat\r\nJAVA_HOME=/usr/jdk1.7.0_80  #jdk路径\r\nexport JAVA_HOME  \r\nCATALANA_HOME=/usr/local/apache-tomcat-7.0.90  #tomcat路径\r\nexport CATALINA_HOME  \r\n   \r\ncase \"$1\" in  \r\nstart)  \r\n    echo \"Starting Tomcat...\"  \r\n    $CATALANA_HOME/bin/startup.sh  \r\n	echo \"Starting Tomcat ok\"\r\n    ;;  \r\n   \r\nstop)  \r\n    echo \"Stopping Tomcat...\"  \r\n    $CATALANA_HOME/bin/shutdown.sh  \r\n	echo \"Stopping Tomcat ok\"\r\n    ;;  \r\n   \r\nrestart)  \r\n    echo \"Stopping Tomcat...\"  \r\n    $CATALANA_HOME/bin/shutdown.sh  \r\n    sleep 2  \r\n    echo  \r\n    echo \"Starting Tomcat...\"  \r\n$CATALANA_HOME/bin/startup.sh  \r\necho \"Starting Tomcat ok\"\r\n    ;;  \r\n   \r\n*)  \r\n    echo \"Usage: $prog {start|stop|restart}\"  \r\n    ;;  \r\nesac  \r\nexit 0\r\n~~~\r\n\r\n> 保存文件\r\n\r\n> 给文件添加可执行权限\r\n\r\n~~~shell\r\nchmod 755 tomcat\r\n~~~\r\n\r\n> 把tomcat添加到系统服务\r\n\r\n~~~shell\r\nchkconfig --add tomcat\r\n~~~\r\n\r\n> 开启服务\r\n\r\n~~~shell\r\nchkconfig tomcat on\r\n~~~\r\n\r\n>重启系统查看配置是否成功\r\n\r\n~~~shell\r\nreboot\r\n~~~\r\n\r\n>执行命令看端口号\r\n\r\n~~~shell\r\nnetstat -na | grep 8080\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLxX8g.png)\r\n\r\n> 或者执行此命令\r\n\r\n~~~shell\r\nps -ef | grep java\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLxvvj.png)\r\n\r\n> 开机启动成功\r\n\r\n### 4.3操作命令\r\n\r\n~~~shell\r\n#启动命令\r\nservice tomcat start\r\n#重启命令\r\nservice tomcat restart\r\n#停止命令\r\nservice tomcat stop\r\n~~~\r\n\r\n> tomcat安装完成\r\n\r\n## 5.mysql安装\r\n\r\n> 安装mysql客户端\r\n\r\n~~~shell\r\nyum -y install mysql-server\r\nyum -y install mysql-devel\r\n~~~\r\n\r\n> 启动mysql服务\r\n\r\n~~~shell\r\nservice mysqld start\r\n~~~\r\n\r\n> 设置开机启动\r\n\r\n~~~shell\r\nchkconfig --add mysqld\r\nchkconfig mysqld on\r\n~~~\r\n\r\n> 登录mysql\r\n\r\n~~~shell\r\nmysql -u root –p\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLzrRg.png)\r\n\r\n>第一次登录不需要密码回车就行\r\n>\r\n>设置密码\r\n\r\n~~~shell\r\nuse mysql;\r\n#设置密码\r\nSET PASSWORD FOR \'root\'@\'localhost\' = PASSWORD(\'123456\');\r\nflush privileges;\r\n#退出重新登录\r\nexit\r\n~~~\r\n\r\n### 5.1开启远程访问\r\n\r\n>登录mysql\r\n\r\n~~~shell\r\nmysql -u root -p\r\n~~~\r\n\r\n~~~shell\r\nuse mysql;\r\n#进行授权操作\r\ngrant all privileges on *.*  to \'root\'@\'%\' identified by \'123456\' with grant option;\r\n#重载授权表\r\nflush privileges;\r\n#退出mysql\r\nexit\r\n~~~\r\n\r\n### 5.2测试远程访问\r\n\r\n> 如图\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLzHy9.png)\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PLzvFK.png)\r\n\r\n> 报错 解决办法\r\n\r\n~~~shell\r\n#打开文件\r\nvim /etc/my.cnf\r\n~~~\r\n\r\n看看是否有绑定本地回环地址的配置，如果有，注释掉下面这段文字：（在文字之前加上 #号即可） \r\n\r\nbind-address = 127.0.0.1\r\n\r\n![](https://s1.ax1x.com/2018/08/28/POSVFf.png)\r\n\r\n然后找到 [mysqld] 部分的参数，在配置后面建立一个新行，添加下面这个参数：\r\nskip-name-resolve\r\n\r\n![](https://s1.ax1x.com/2018/08/28/POSYfU.png)\r\n\r\n> 保存文件并重启 mysql\r\n\r\n~~~shell\r\nservice mysqld restart\r\n~~~\r\n\r\n> 再次测试\r\n\r\n![](https://s1.ax1x.com/2018/08/28/POS6fO.png)\r\n\r\n> 连接成功\r\n\r\n------\r\n\r\n## 6.安装nginx\r\n\r\n### 6.1.安装\r\n\r\n> 在安装 nginx 前首先要确认系统中安装了 gcc、pcre-devel、zlib-devel、openssl-deve\r\n\r\n~~~shell\r\n#一键安装\r\nyum -y install gcc pcre-devel zlib-devel openssl openssl-devel\r\n~~~\r\n\r\n> 进入软件目录\r\n\r\n~~~shell\r\ncd /www/dev\r\n~~~\r\n\r\n> 解压nginx到当前目录\r\n\r\n~~~shell\r\ntar -zxvf nginx-1.13.10.tar.gz\r\n~~~\r\n\r\n> 进入解压目录\r\n\r\n~~~shell\r\ncd /www/dev/nginx-1.13.10\r\n~~~\r\n\r\n> 编译\r\n\r\n~~~shell\r\n./configure --prefix=/usr/local/nginx\r\n~~~\r\n\r\n~~~shell\r\n#执行make命令\r\nmake\r\n#执行make install命令\r\nmake install\r\n~~~\r\n\r\n### 6.2测试是否安装成功\r\n\r\n~~~shell\r\n#进入nginx目录\r\ncd /usr/local/nginx/sbin/\r\n#启动nginx\r\n./nginx\r\n~~~\r\n\r\n> 输入服务器ip访问，看见下面页面证明安装成功\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PO9kPf.png)\r\n\r\n### 6.3配置开机启动\r\n\r\n~~~shell\r\n#进入目录\r\ncd /etc/init.d\r\n#新建文件\r\ntouch nginx\r\n#编辑文件\r\nvim nginx\r\n~~~\r\n\r\n> 添加如下内容\r\n\r\n~~~shell\r\n#!/bin/sh\r\n#\r\n# nginx - this script starts and stops the nginx daemon\r\n#\r\n# chkconfig:   - 85 15\r\n# description:  NGINX is an HTTP(S) server, HTTP(S) reverse \\\r\n#               proxy and IMAP/POP3 proxy server\r\n# processname: nginx\r\n# config:      /etc/nginx/nginx.conf\r\n# config:      /etc/sysconfig/nginx\r\n# pidfile:     /var/run/nginx.pid\r\n# Source function library.\r\n. /etc/rc.d/init.d/functions\r\n# Source networking configuration.\r\n. /etc/sysconfig/network\r\n# Check that networking is up.\r\n[ \"$NETWORKING\" = \"no\" ] && exit 0\r\nnginx=\"/usr/local/nginx/sbin/nginx\"  #nginx执行路径\r\nprog=$(basename $nginx)\r\nNGINX_CONF_FILE=\"/usr/local/nginx/conf/nginx.conf\"  #nginx配置文件路径\r\n[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx\r\nlockfile=/var/lock/subsys/nginx\r\nmake_dirs() {\r\n   # make required directories\r\n   user=`$nginx -V 2>&1 | grep \"configure arguments:\" | sed \'s/[^*]*--user=\\([^ ]*\\).*/\\1/g\' -`\r\n   if [ -z \"`grep $user /etc/passwd`\" ]; then\r\n       useradd -M -s /bin/nologin $user\r\n   fi\r\n   options=`$nginx -V 2>&1 | grep \'configure arguments:\'`\r\n   for opt in $options; do\r\n       if [ `echo $opt | grep \'.*-temp-path\'` ]; then\r\n           value=`echo $opt | cut -d \"=\" -f 2`\r\n           if [ ! -d \"$value\" ]; then\r\n               # echo \"creating\" $value\r\n               mkdir -p $value && chown -R $user $value\r\n           fi\r\n       fi\r\n   done\r\n}\r\nstart() {\r\n    [ -x $nginx ] || exit 5\r\n    [ -f $NGINX_CONF_FILE ] || exit 6\r\n    make_dirs\r\n    echo -n $\"Starting $prog: \"\r\n    daemon $nginx -c $NGINX_CONF_FILE\r\n    retval=$?\r\n    echo\r\n    [ $retval -eq 0 ] && touch $lockfile\r\n    return $retval\r\n}\r\nstop() {\r\n    echo -n $\"Stopping $prog: \"\r\n    killproc $prog -QUIT\r\n    retval=$?\r\n    echo\r\n    [ $retval -eq 0 ] && rm -f $lockfile\r\n    return $retval\r\n}\r\nrestart() {\r\n    configtest || return $?\r\n    stop\r\n    sleep 1\r\n    start\r\n}\r\nreload() {\r\n    configtest || return $?\r\n    echo -n $\"Reloading $prog: \"\r\n    killproc $nginx -HUP\r\n    RETVAL=$?\r\n    echo\r\n}\r\nforce_reload() {\r\n    restart\r\n}\r\nconfigtest() {\r\n  $nginx -t -c $NGINX_CONF_FILE\r\n}\r\nrh_status() {\r\n    status $prog\r\n}\r\nrh_status_q() {\r\n    rh_status >/dev/null 2>&1\r\n}\r\ncase \"$1\" in\r\n    start)\r\n        rh_status_q && exit 0\r\n        $1\r\n        ;;\r\n    stop)\r\n        rh_status_q || exit 0\r\n        $1\r\n        ;;\r\n    restart|configtest)\r\n        $1\r\n        ;;\r\n    reload)\r\n        rh_status_q || exit 7\r\n        $1\r\n        ;;\r\n    force-reload)\r\n        force_reload\r\n        ;;\r\n    status)\r\n        rh_status\r\n        ;;\r\n    condrestart|try-restart)\r\n        rh_status_q || exit 0\r\n            ;;\r\n    *)\r\n        echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\"\r\n        exit 2\r\nesac\r\n~~~\r\n\r\n> 保存文件\r\n\r\n~~~shell\r\n#为nginx添加执行权限\r\nchmod 755 nginx\r\n#添加到系统服务\r\nchkconfig --add nginx\r\nchkconfig nginx on\r\n~~~\r\n\r\n~~~shell\r\n#测试脚本是否可用,启动nginx\r\nservice nginx start\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PO9dd1.png)\r\n\r\n> 启动成功\r\n\r\n~~~shell\r\n#停止nginx\r\nservice nginx stop\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PO9DJK.png)\r\n\r\n> 停止成功\r\n\r\n~~~shell\r\n#重启nginx\r\nservice nginx restart\r\n~~~\r\n\r\n![](https://s1.ax1x.com/2018/08/28/PO9gLd.png)\r\n\r\n> 重启成功\r\n>\r\n> 完成安装', '2019-04-13 12:22:27', '0', 'linux安装 JDK + Tomcat + Mysql + Nginx', '/static/img/rand/3.jpg', 'linux安装 JDK + Tomcat + Mysql + Nginx', '0', 'post', '0', '2019-04-13 12:26:25', '1555129346', null);

-- ----------------------------
-- Table structure for mayday_article_category
-- ----------------------------
DROP TABLE IF EXISTS `mayday_article_category`;
CREATE TABLE `mayday_article_category` (
  `article_id` int(20) NOT NULL,
  `category_id` bigint(20) NOT NULL,
  KEY `MAYDAY_ARTILE_ID` (`article_id`) USING BTREE,
  KEY `MAYDAY_ARTILE_CATEGORY_ID` (`category_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_article_category
-- ----------------------------
INSERT INTO `mayday_article_category` VALUES ('3', '7');
INSERT INTO `mayday_article_category` VALUES ('4', '4');
INSERT INTO `mayday_article_category` VALUES ('2', '4');

-- ----------------------------
-- Table structure for mayday_article_tag
-- ----------------------------
DROP TABLE IF EXISTS `mayday_article_tag`;
CREATE TABLE `mayday_article_tag` (
  `article_id` int(20) NOT NULL,
  `tag_id` bigint(20) NOT NULL,
  KEY `MAYDAY_ARTILE_ID` (`article_id`) USING BTREE,
  KEY `MAYDAY_ARTILE_TAG_ID` (`tag_id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_article_tag
-- ----------------------------
INSERT INTO `mayday_article_tag` VALUES ('3', '6');
INSERT INTO `mayday_article_tag` VALUES ('4', '3');
INSERT INTO `mayday_article_tag` VALUES ('2', '3');

-- ----------------------------
-- Table structure for mayday_attachment
-- ----------------------------
DROP TABLE IF EXISTS `mayday_attachment`;
CREATE TABLE `mayday_attachment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `picture_name` varchar(255) DEFAULT NULL COMMENT '图片名称',
  `picture_path` varchar(255) DEFAULT NULL COMMENT '图片路径',
  `picture_small_path` varchar(255) DEFAULT NULL COMMENT '略缩图',
  `picture_type` varchar(255) DEFAULT NULL COMMENT '图片类型',
  `picture_create_date` varchar(255) DEFAULT NULL COMMENT '上传时间',
  `picture_size` varchar(255) DEFAULT NULL COMMENT '文件大小',
  `picture_suffix` varchar(255) DEFAULT NULL COMMENT '后缀',
  `picture_wh` varchar(255) DEFAULT NULL COMMENT '尺寸',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_attachment
-- ----------------------------

-- ----------------------------
-- Table structure for mayday_category
-- ----------------------------
DROP TABLE IF EXISTS `mayday_category`;
CREATE TABLE `mayday_category` (
  `category_id` int(11) NOT NULL AUTO_INCREMENT,
  `category_name` varchar(255) DEFAULT NULL COMMENT '分类名称',
  `category_url` varchar(255) DEFAULT NULL COMMENT '分类路径',
  `category_describe` varchar(255) DEFAULT NULL COMMENT '描述',
  PRIMARY KEY (`category_id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_category
-- ----------------------------
INSERT INTO `mayday_category` VALUES ('2', 'Java', 'Java', '');
INSERT INTO `mayday_category` VALUES ('3', 'Spring', 'Spring', '');
INSERT INTO `mayday_category` VALUES ('4', 'Linux', 'Linux', '');
INSERT INTO `mayday_category` VALUES ('5', 'Eclipse', 'Eclipse', '');
INSERT INTO `mayday_category` VALUES ('6', 'JavaScript', 'JavaScript', '');
INSERT INTO `mayday_category` VALUES ('7', 'IDEA', 'IDEA', '');

-- ----------------------------
-- Table structure for mayday_link
-- ----------------------------
DROP TABLE IF EXISTS `mayday_link`;
CREATE TABLE `mayday_link` (
  `link_id` int(11) NOT NULL AUTO_INCREMENT,
  `link_name` varchar(255) DEFAULT NULL COMMENT '名称',
  `link_url` varchar(255) DEFAULT NULL COMMENT '路径',
  `link_logo` varchar(255) DEFAULT NULL COMMENT '链接logo',
  `link_describe` varchar(255) DEFAULT NULL COMMENT '描述',
  PRIMARY KEY (`link_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_link
-- ----------------------------

-- ----------------------------
-- Table structure for mayday_logs
-- ----------------------------
DROP TABLE IF EXISTS `mayday_logs`;
CREATE TABLE `mayday_logs` (
  `log_id` int(11) NOT NULL AUTO_INCREMENT,
  `log_title` varchar(255) DEFAULT NULL COMMENT '标题',
  `log_content` varchar(255) DEFAULT NULL COMMENT '内容',
  `log_ip` varchar(255) DEFAULT NULL COMMENT 'ip',
  `log_date` datetime DEFAULT NULL COMMENT '时间',
  PRIMARY KEY (`log_id`)
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_logs
-- ----------------------------
INSERT INTO `mayday_logs` VALUES ('1', '安装MAYDAY', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:14:47');
INSERT INTO `mayday_logs` VALUES ('2', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:17:02');
INSERT INTO `mayday_logs` VALUES ('3', '删除文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:18:08');
INSERT INTO `mayday_logs` VALUES ('4', '发表文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:21:51');
INSERT INTO `mayday_logs` VALUES ('5', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:23:19');
INSERT INTO `mayday_logs` VALUES ('6', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:38:51');
INSERT INTO `mayday_logs` VALUES ('7', '发表文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:53:28');
INSERT INTO `mayday_logs` VALUES ('8', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:53:44');
INSERT INTO `mayday_logs` VALUES ('9', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:56:38');
INSERT INTO `mayday_logs` VALUES ('10', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:56:49');
INSERT INTO `mayday_logs` VALUES ('11', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 11:57:20');
INSERT INTO `mayday_logs` VALUES ('12', '发表文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 12:22:27');
INSERT INTO `mayday_logs` VALUES ('13', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 12:23:36');
INSERT INTO `mayday_logs` VALUES ('14', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 12:24:53');
INSERT INTO `mayday_logs` VALUES ('15', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 12:25:11');
INSERT INTO `mayday_logs` VALUES ('16', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 12:25:21');
INSERT INTO `mayday_logs` VALUES ('17', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 12:26:25');
INSERT INTO `mayday_logs` VALUES ('18', '更新文章', '操作成功', '0:0:0:0:0:0:0:1', '2019-04-13 12:26:36');
INSERT INTO `mayday_logs` VALUES ('19', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-13 12:52:07');
INSERT INTO `mayday_logs` VALUES ('20', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 00:00:37');
INSERT INTO `mayday_logs` VALUES ('21', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 00:11:01');
INSERT INTO `mayday_logs` VALUES ('22', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 02:54:06');
INSERT INTO `mayday_logs` VALUES ('23', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 03:40:20');
INSERT INTO `mayday_logs` VALUES ('24', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 03:41:37');
INSERT INTO `mayday_logs` VALUES ('25', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 04:58:37');
INSERT INTO `mayday_logs` VALUES ('26', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 05:01:51');
INSERT INTO `mayday_logs` VALUES ('27', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 06:19:43');
INSERT INTO `mayday_logs` VALUES ('28', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 06:30:00');
INSERT INTO `mayday_logs` VALUES ('29', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 15:12:50');
INSERT INTO `mayday_logs` VALUES ('30', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 15:20:08');
INSERT INTO `mayday_logs` VALUES ('31', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 15:49:09');
INSERT INTO `mayday_logs` VALUES ('32', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 16:21:56');
INSERT INTO `mayday_logs` VALUES ('33', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 17:32:48');
INSERT INTO `mayday_logs` VALUES ('34', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 17:39:08');
INSERT INTO `mayday_logs` VALUES ('35', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 17:52:39');
INSERT INTO `mayday_logs` VALUES ('36', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 18:02:56');
INSERT INTO `mayday_logs` VALUES ('37', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 18:17:01');
INSERT INTO `mayday_logs` VALUES ('38', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 18:26:47');
INSERT INTO `mayday_logs` VALUES ('39', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 18:36:51');
INSERT INTO `mayday_logs` VALUES ('40', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 18:42:27');
INSERT INTO `mayday_logs` VALUES ('41', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 18:46:20');
INSERT INTO `mayday_logs` VALUES ('42', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 18:49:16');
INSERT INTO `mayday_logs` VALUES ('43', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 19:03:48');
INSERT INTO `mayday_logs` VALUES ('44', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 21:37:40');
INSERT INTO `mayday_logs` VALUES ('45', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 22:01:49');
INSERT INTO `mayday_logs` VALUES ('46', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 23:54:15');
INSERT INTO `mayday_logs` VALUES ('47', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-14 23:56:51');
INSERT INTO `mayday_logs` VALUES ('48', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 00:37:25');
INSERT INTO `mayday_logs` VALUES ('49', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 00:40:15');
INSERT INTO `mayday_logs` VALUES ('50', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 00:58:06');
INSERT INTO `mayday_logs` VALUES ('51', '登录后台', '登录成功', '127.0.0.1', '2019-04-15 01:03:57');
INSERT INTO `mayday_logs` VALUES ('52', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:18:31');
INSERT INTO `mayday_logs` VALUES ('53', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:21:12');
INSERT INTO `mayday_logs` VALUES ('54', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:31:38');
INSERT INTO `mayday_logs` VALUES ('55', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:36:49');
INSERT INTO `mayday_logs` VALUES ('56', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:42:10');
INSERT INTO `mayday_logs` VALUES ('57', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:48:29');
INSERT INTO `mayday_logs` VALUES ('58', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:52:00');
INSERT INTO `mayday_logs` VALUES ('59', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:53:52');
INSERT INTO `mayday_logs` VALUES ('60', '登录后台', '登录成功', '0:0:0:0:0:0:0:1', '2019-04-15 01:55:13');

-- ----------------------------
-- Table structure for mayday_menu
-- ----------------------------
DROP TABLE IF EXISTS `mayday_menu`;
CREATE TABLE `mayday_menu` (
  `menu_id` int(11) NOT NULL AUTO_INCREMENT,
  `menu_icon` varchar(255) DEFAULT NULL COMMENT '菜单图标',
  `menu_name` varchar(255) DEFAULT NULL COMMENT '菜单名称',
  `menu_sort` int(11) DEFAULT NULL COMMENT '排序',
  `menu_target` varchar(255) DEFAULT NULL COMMENT '打开方式',
  `menu_url` varchar(255) DEFAULT NULL COMMENT '菜单路径',
  PRIMARY KEY (`menu_id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_menu
-- ----------------------------
INSERT INTO `mayday_menu` VALUES ('1', null, '首页', '1', '_self', '/');
INSERT INTO `mayday_menu` VALUES ('2', null, '归档', '2', '_self', '/archives');
INSERT INTO `mayday_menu` VALUES ('3', null, '友链', '3', '_self', '/links');

-- ----------------------------
-- Table structure for mayday_music
-- ----------------------------
DROP TABLE IF EXISTS `mayday_music`;
CREATE TABLE `mayday_music` (
  `m_id` int(10) NOT NULL AUTO_INCREMENT,
  `m_title` varchar(255) NOT NULL DEFAULT '' COMMENT '歌曲名字',
  `m_author` varchar(255) DEFAULT '' COMMENT '歌曲作者',
  `m_url` varchar(255) NOT NULL DEFAULT '' COMMENT '歌曲链接',
  `m_pic` varchar(255) DEFAULT '' COMMENT '歌曲图片',
  `m_lrc` longtext COMMENT '歌词',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`m_id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_music
-- ----------------------------
INSERT INTO `mayday_music` VALUES ('1', 'ブルーバード(青鸟)', 'いきものがかり', 'http://music.163.com/song/media/outer/url?id=718765', 'http://p1.music.126.net/MxMt67BMwy505AHiTvnMqg==/2384840720672469.jpg?param=300x300', '[00:00.000] 作曲 : 水野良樹[00:00.133] 作词 : 水野良樹[00:00.400]飛翔いたら戻らないと言って[00:07.130]目指したのは 蒼い 蒼い あの空[00:14.150][00:25.990]“悲しみ”はまだ覚えられず[00:29.170]“切なさ”は今つかみはじめた[00:32.390]あなたへと抱く この感情も[00:35.450]今“言葉”に変わっていく[00:38.720]未知なる世界の 遊迷(ゆめ)から目覚めて[00:44.970]この羽根を広げ 飛び立つ[00:51.200]飛翔(はばた)いたら 戻らないと言って[00:57.570]目指したのは 白い 白い あの雲[01:03.880]突き抜けたら みつかると知って[01:10.390]振り切るほど 蒼い 蒼い あの空[01:16.580]蒼い 蒼い あの空[01:19.670]蒼い 蒼い あの空[01:23.570][01:29.090]愛想尽きたような音で[01:32.320]錆びれた古い窓は壊れた[01:35.440]見飽きたカゴは ほら捨てていく[01:38.640]振り返ることはもうない[01:41.800]高鳴る鼓動に 呼吸を共鳴(あず)けて[01:48.170]この窓を蹴って 飛び立つ[01:54.480]駆け出したら 手にできると言って[02:00.780]いざなうのは 遠い 遠い あの声[02:07.050]眩しすぎた あなたの手も握って[02:13.340]求めるほど 蒼い 蒼い あの空[02:26.640][02:32.870]墜ちていくと わかっていた[02:39.070]それでも 光を追い続けていくよ[02:46.580]飛翔(はばた)いたら 戻らないと言って[02:52.890]探したのは 白い 白い あの雲[02:59.150]突き抜けたら みつかると知って[03:05.490]振り切るほど 蒼い 蒼い あの空[03:11.790]蒼い 蒼い あの空[03:14.950]蒼い 蒼い あの空[03:19.670]', '2019-04-14 18:47:28', '2019-04-14 18:47:28');
INSERT INTO `mayday_music` VALUES ('2', '樱花樱花想见你', '李蚊香,满汉全席', 'http://music.163.com/song/media/outer/url?id=440241194', 'http://p2.music.126.net/gjIv7X2Azo0bABOdZf_xRg==/109951162849412719.jpg?param=300x300', '[by:八面六臂也][00:00.000] 作曲 : 高野健一[00:01.000] 作词 : RSP[00:06.20]『さくら さくら 会いたいよ[00:08.34]いやだ 君に今すぐ会いたいよ[00:11.57]だいじょうぶ もう泣かないで[00:14.34]私は風 あなたを包んでいるよ[00:18.14]『さくら さくら 会いたいよ[00:20.25]いやだ 君に今すぐ会いたいよ[00:23.51]ありがとう ずっと大好き[00:26.41]私は星 あなたを見守り続ける[00:30.82]あなたに出会えてよかった[00:35.58]本当に本当によかった[00:42.32]ここにもういれなくなっちゃった[00:44.72]もう行かなくちゃ ホントゴメンね[00:48.12]私はもう一人で遠いところに行かなくちゃ[00:54.09]どこへ?って聞かないで[00:56.55]なんで?って聞かないで ホントゴメンね[01:00.06]私はもうあなたのそばにいられなくなったの[01:06.35]いつもの散歩道 桜並木を抜けてゆき[01:12.20]よく遊んだ川面の上の 空の光る方へと[01:18.06]もう会えなくなるけど[01:20.41]寂しいけど 平気だよ[01:23.53]生まれてよかった ホントよかった[01:26.69]あなたに出会ってよかった[01:30.19]『さくら さくら 会いたいよ[01:32.40]いやだ 君に今すぐ会いたいよ[01:35.47]だいじょうぶ もう泣かないで[01:38.36]私は風 あなたを包んでいるよ[01:42.13]『さくら さくら 会いたいよ[01:44.31]いやだ 君に今すぐ会いたいよ[01:47.49]ありがとう ずっと大好き[01:50.51]私は星 あなたを見守り続ける[01:54.85]あなたに出会えてよかった[02:00.10]本当に本当によかった[02:06.55]あなたの帰りを待つ午後[02:08.92]あなたの足音 何げないこと[02:12.21]私はそう、一番の喜びを知りました[02:18.57]あなたが話してくれたこと[02:21.03]一日のこと いろいろなこと[02:24.11]私はそう、一番の悲しみも知りました[02:30.17]それはあなたの笑顔 あなたの涙 その優しさ[02:36.09]私の名を呼ぶ声 抱き締める腕 その温もり[02:42.19]もう触れられないけど 忘れないよ 幸せだよ[02:47.54]生まれてよかった ホントよかった[02:50.61]あなたに出会ってよかった[02:54.12]『さくら さくら 会いたいよ[02:56.31]いやだ 君に今すぐ会いたいよ[02:59.46]だいじょうぶだよ ここにいる[03:02.35]私は春 あなたを抱く空[03:06.04]『さくら さくら 会いたいよ[03:08.29]いやだ 君に今すぐ会いたいよ[03:11.47]ありがとう ずっと大好き[03:14.42]私は鳥 あなたに歌い続ける[03:24.08]桜の舞う空の彼方[03:30.00]目を閉じれば心の中[03:41.69]『さくら さくら 会いたいよ[03:44.40]いやだ 君に今すぐ会いたいよ[03:47.48]いいんだよ 微笑んでごらん[03:50.55]私は花 あなたの指先の花[03:54.10]『さくら さくら 会いたいよ[03:56.38]いやだ 君に今すぐ会いたいよ[03:59.43]ありがとう ずっと大好き[04:02.35]私は愛 あなたの胸に[04:09.36]『さくら さくら 会いたいよ[04:11.34]いやだ 君に今すぐ会いたいよ[04:14.52]だいじょうぶ もう泣かないで[04:17.41]私は風 あなたを包んでいるよ[04:21.20]『さくら さくら 会いたいよ[04:23.32]いやだ 君に今すぐ会いたいよ[04:26.50]ありがとう ずっと大好き[04:29.35]私は星 あなたを見守り続ける[04:35.38]あなたに出会えてよかった[04:40.56]本当に本当によかった[04:46.47]本当に本当によかった', '2019-04-14 21:54:36', '2019-04-14 21:54:36');

-- ----------------------------
-- Table structure for mayday_options
-- ----------------------------
DROP TABLE IF EXISTS `mayday_options`;
CREATE TABLE `mayday_options` (
  `option_name` varchar(255) NOT NULL COMMENT '设置名',
  `option_value` longtext COMMENT '设置内容',
  PRIMARY KEY (`option_name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_options
-- ----------------------------
INSERT INTO `mayday_options` VALUES ('attachment_location', 'server');
INSERT INTO `mayday_options` VALUES ('blog_name', '叶随风');
INSERT INTO `mayday_options` VALUES ('blog_start', '2019-04-13');
INSERT INTO `mayday_options` VALUES ('blog_url', 'http://localhost:8080/');
INSERT INTO `mayday_options` VALUES ('email_username', '1213@qq.com');
INSERT INTO `mayday_options` VALUES ('is_install', 'true');

-- ----------------------------
-- Table structure for mayday_tag
-- ----------------------------
DROP TABLE IF EXISTS `mayday_tag`;
CREATE TABLE `mayday_tag` (
  `tag_id` int(11) NOT NULL AUTO_INCREMENT,
  `tag_name` varchar(255) DEFAULT NULL COMMENT '标签名称',
  `tag_url` varchar(255) DEFAULT NULL COMMENT '标签路径',
  PRIMARY KEY (`tag_id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_tag
-- ----------------------------
INSERT INTO `mayday_tag` VALUES ('2', 'Spring', 'Spring');
INSERT INTO `mayday_tag` VALUES ('3', 'Linux', 'Linux');
INSERT INTO `mayday_tag` VALUES ('4', 'Eclipse', 'Eclipse');
INSERT INTO `mayday_tag` VALUES ('5', 'JavaScript', 'JavaScript');
INSERT INTO `mayday_tag` VALUES ('6', 'IDEA', 'IDEA');
INSERT INTO `mayday_tag` VALUES ('8', 'Java', 'Java');

-- ----------------------------
-- Table structure for mayday_theme
-- ----------------------------
DROP TABLE IF EXISTS `mayday_theme`;
CREATE TABLE `mayday_theme` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `theme_name` varchar(255) DEFAULT NULL COMMENT '主题名(url)',
  `theme_describe` varchar(255) DEFAULT NULL COMMENT '主题描述',
  `theme_img` varchar(255) DEFAULT NULL COMMENT '主题预览图',
  `theme_status` int(11) DEFAULT '0' COMMENT '0未启用1已启用',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_theme
-- ----------------------------
INSERT INTO `mayday_theme` VALUES ('1', 'pinghsu', 'pinghsu', '/static/img/pinghsu.jpg', '1', '2019-04-13 11:14:47');

-- ----------------------------
-- Table structure for mayday_user
-- ----------------------------
DROP TABLE IF EXISTS `mayday_user`;
CREATE TABLE `mayday_user` (
  `user_id` int(11) NOT NULL AUTO_INCREMENT,
  `login_enable` varchar(255) DEFAULT '0' COMMENT '是否禁用登录',
  `login_error` int(11) DEFAULT NULL COMMENT '登录失败次数',
  `login_last_time` datetime DEFAULT NULL COMMENT '最后登录时间',
  `user_portrait` varchar(255) DEFAULT NULL COMMENT '头像',
  `user_explain` varchar(255) DEFAULT NULL COMMENT '说明',
  `user_display_name` varchar(255) DEFAULT NULL COMMENT '显示名称',
  `user_email` varchar(255) DEFAULT NULL COMMENT '邮箱',
  `user_name` varchar(255) DEFAULT NULL COMMENT '用户名',
  `user_pwd` varchar(255) DEFAULT NULL COMMENT '密码',
  PRIMARY KEY (`user_id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mayday_user
-- ----------------------------
INSERT INTO `mayday_user` VALUES ('1', 'false', '0', '2019-04-15 01:55:13', null, null, '叶随风', '1213@qq.com', 'yesuifeng', 'e10adc3949ba59abbe56e057f20f883e');
